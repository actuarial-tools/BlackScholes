html.Label('Place provide the date when you want to start modeling'),
html.Br(),
dcc.DatePickerSingle(id='valuationDate', date=datetime.datetime(2019, 11, 25),
                     display_format='YYYY-MM-DD'),
html.Br(),
html.Label('Place provide the end of modeling.'),
html.Br(),
dcc.DatePickerSingle(id='endDate', date=datetime.datetime(2020, 2, 20),
                     display_format='YYYY-MM-DD'),
html.Br(),
dcc.Dropdown(id='schedule', style={'background-color': 'orange'}, placeholder='Define Schedule',
             value='Daily',
             options=[{'label': 'Two Dates', 'value': 'Two Dates'},
                      {'label': 'Daily', 'value': 'Daily'},
                      {'label': 'Weekly', 'value': 'Weekly'},
                      {'label': 'Monthly', 'value': 'Monthly'},
                      {'label': 'Quarterly', 'value': 'Quarterly'},
                      {'label': 'Semiannual', 'value': 'Semiannual'},
                      {'label': 'Annual', 'value': 'Annual'},

                      ]),
html.Br(),
dcc.Dropdown(id='convention', style={'background-color': 'purple'},
             placeholder='Chose Available Convention',
             options=[{'label': 'Actual Actual', 'value': 'ActualActual'},
                      {'label': 'Actual360', 'value': 'Actual360'},
                      {'label': 'Actual365', 'value': 'Actual365'},
                      {'label': 'Thirty360', 'value': 'Thirty360'},
                      {'label': 'Business252', 'value': 'Business252'}], value='ActualActual'),
dcc.Dropdown(id='calendar', placeholder='Put the name of Country',
             options=[{'label': 'UK', 'value': 'United Kingdom'},
                      {'label': 'United States', 'value': 'USA'},
                      {'label': 'Switzerland', 'value': 'Switzerland'},
                      {'label': 'Poland', 'value': 'Poland'}
                      ], value='United Kingdom'),

dcc.Input(id='Business Convention', placeholder='Define Business Convention', value='Following'),
dcc.Input(id='Termination Business Convention',
          placeholder='Define Termination Business Convention', value='Following'),
dcc.Input(id='endOfMonth', value='False'),
html.Br(),
html.Label('Place provide the parameters for option'),
dcc.Dropdown(id='optiontype', options=[{'label': 'Call Option', 'value': 'call'},
                                       {'label': 'Put Option', 'value': 'put'}], value='call'),
html.Hr(),
dcc.Input(id='currentPrice', value=90, type='number', placeholder='Current Price'),
dcc.Input(id='strike', value=92, type='number', placeholder='Strike'),
dcc.Input(id='riskFree', value=0.1, type='number', placeholder='Risk Free Rate'),
dcc.Input(id='volatility', value=0.23, type='number', placeholder='Volatility'),
dcc.Input(id='dividend', value=0, type='number', placeholder='Dividend'),
html.Hr(),
html.Label('Place provide the parameters for running simulation'),
html.Br(),
dcc.RadioItems(id='sample',
               options=[{'label': '1000', 'value': 1000}, {'label': '10000', 'value': 10000},
                        {'label': '100000', 'value': 100000}], value=1000),
dcc.RadioItems(id='numberOfPathToDisplay',
               options=[{'label': '10', 'value': 10}, {'label': '15', 'value': 15},
                        {'label': '25', 'value': 25}, {'label': '50', 'value': 50}], value=15),
html.Img(src='data:image/png;base64,{}'.format(encoded_image.decode()), style={'text-align': 'center'}),
html.Hr(),
###################################----RESULT----###############################################
html.Div(id='MonteCarloPrice', children=''),

###################################----RESULT----###############################################
])
